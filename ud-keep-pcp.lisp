(in-package :string-rewriting)

(defun define-rules ()
  (let ((grammar nil))
    (flet ((define-rule (lhs rhs &rest tags)
             (push (compile-rule (list lhs rhs tags)) grammar))
           (define-regex-rule (lhs rhs &rest tags)
             (push (compile-regex-rule (list lhs rhs tags)) grammar)))


      (define-rule "foi_V o_ART quarto_N colocado_PCP" "foi_V o_ART quarto_ADJ colocado_N" :cr)
      (define-rule "31º_ADJ colocado_PCP" "31º_ADJ colocado_N" :cr)
      (define-rule "bem_PCP *_PCP" "bem_ADV *_ADJ" :cr)
      (define-rule "mal_PCP *_PCP" "mal_ADV *_ADJ" :cr)
      (define-rule "bem_ADV vind*_PCP" "bem-vind*_ADJ" :cr :mm)
      (define-rule "somente_PDEN depois_PREP de_PREP comunicado_PCP oficial_N" "somente_PDEN depois_PREP de_PREP comunicado_N oficial_ADJ" :cr)
      (define-rule "anteontem_ADV soldados_PCP britânicos_N" "anteontem_ADV soldados_N britânicos_ADJ" :cr)
      (define-rule "distante_ADJ e_KC caminhadas_PCP mais_ADV longínquas_ADJ" "distante_ADJ e_KC caminhadas_N mais_ADV longínquas_ADJ" :cr)
      (define-rule "a_ART presente_ADJ medida_PCP provisória_ADJ" "a_ART presente_ADJ medida_N provisória_ADJ" :cr)
      (define-rule "teve_V a_ART maior_ADJ goleada_PCP" "teve_V a_ART maior_ADJ goleada_N" :cr)
      (define-rule "consideram_V críticas_ADJ exageradas_PCP" "consideram_V críticas_N exageradas_ADJ" :cr)
      (define-rule "É_V preciso_ADJ cuidados_PCP antes_ADV de_PREP" "É_V preciso_ADJ cuidados_N antes_ADV de_PREP" :cr)
      (define-rule "serviços_N bancários_ADJ informatizados_PCP" "serviços_N bancários_ADJ informatizados_ADJ" :cr)
      (define-rule "o_ART grande_ADJ homenageado_PCP" "o_ART grande_ADJ homenageado_N" :cr)
      (define-rule "o_ART surpreendente_ADJ verdadeiro_ADJ culpado_PCP" "o_ART surpreendente_ADJ verdadeiro_ADJ culpado_N" :cr)
      (define-rule "a_ART grande_ADJ visada_PCP niilista_N" "a_ART grande_ADJ visada_N niilista_ADJ" :cr)
      (define-rule "maior_ADJ aliada_PCP de_PREP a_ART" "maior_ADJ aliada_N de_PREP a_ART" :cr)
      (define-rule "uma_ART inimiga_ADJ acirrada_PCP" "uma_ART inimiga_N acirrada_ADJ" :dd :cr)
      (define-rule "tradicional_ADJ aliada_PCP de_PREP os_ART sérvios_N"  "tradicional_ADJ aliada_N de_PREP os_ART sérvios_N" :cr)
      (define-rule "três_NUM últimas_ADJ partidas_PCP" "três_NUM últimas_ADJ partidas_N" :cr)
      (define-rule "rodízios_N VAUX_PCP com_PREP" "rodízios_N com_PREP" :cr)
      (define-rule "um_ART mal_N entendido_PCP" "um_ART mal_ADV entendido_N" :cr)
      (define-rule "curta_PREP ADJ_PREP tecido_N listrado_PCP" "curta_ADJ tecido_N listrado_ADJ" :cr)
      (define-rule "vezes_N demasiado_PCP óbvia_ADJ" "vezes_N demasiado_ADV óbvia_ADJ" :cr)
      (define-rule "e_KC rodopiante_N" "e_KC rodopiante_ADJ" :cr)
      (define-rule "mercado_N auto-_N regulado_PCP e_KC" "mercado_N auto-regulado_PCP e_KC" :cr)
      (define-rule "forte_N ruído_PCP eram_VAUX" "forte_ADJ ruído_N eram_VAUX" :cr)
      (define-rule "Presos_PCP são_VAUX" "Presos_N são_VAUX" :cr)
      (define-rule "trágico_N emaranhado_PCP" "trágico_ADJ emaranhado_N" :cr)
      (define-rule "Retirada_PCP de_PREP as_ART tropas_N" "Retirada_N de_PREP as_ART tropas_N" :cr)
      (define-rule "quilômetros_N quadrados_PCP" "quilômetros_N quadrados_ADJ" :cr)
      (define-rule "ser_V enviadas_N datilografadas_PCP" "ser_V enviadas_V datilografadas_PCP" :cr)
      (define-rule "os_ART chamados_N \"\_\" desaparecidos_PCP" "os_ART chamados_V \"\_\" desaparecidos_N" :cr)
      (define-rule "presente_ADJ medida_PCP provisória_ADJ" "presente_ADJ medida_N provisória_ADJ" :cr)
      (define-rule "a_ART retomada_PCP de_PREP" "a_ART retomada_N de_PREP" :cr)
      (define-rule "resultado_PCP de_PREP o_ART" "resultado_N de_PREP o_ART" :cr :dd)
      (define-rule "de_PREP a_ART largada_PCP" "de_PREP a_ART largada_N" :cr)
      (define-rule "tocou_V cruzado_PCP" "tocou_V cruzado_ADV" :cr)
      (define-rule "Resultado_PCP" "Resultado_N" :cr)
      (define-rule "branquinhos_N e_KC aplicados_PCP" "branquinhos_ADJ e_KC aplicados_ADJ" :cr :mm)
      (define-rule "após_PREP a_ART largada_PCP" "após_PREP a_ART largada_N" :cr)
      (define-rule "obrigado_PCP \!\_\!" "obrigado_INTJ \!\_\!" :cr)
      (define-rule "cobrou_V fechado_PCP" "cobrou_V fechado_ADV" :cr)
      (define-rule "o_ART vacilante_ADJ e_KC o_ART derrotado_PCP" "o_ART vacilante_N e_KC o_ART derrotado_N" :cr)
      (define-rule "os_ART concentrados_PCP" "os_ART concentrados_N" :cr :dd)
      (define-rule "o_ART envaido_PCP" "o_ART envaido_N" :cr :typo)
      (define-rule "a_ART maior_ADJ goleada_PCP" "a_ART maior_ADJ goleada_N" :cr)
      (define-rule "a_ART goleada_PCP" "a_ART goleada_N" :cr)
      (define-rule "chuta_V cruzado_PCP" "chuta_V cruzado_ADV" :cr :dd)
      (define-rule "que_KS os_PROSUB importados_PCP" "que_KS os_PROSUB importados_N" :cr)
      (define-rule "Palmeiras_NPROP jogando_V adiantado_PCP" "Palmeiras_NPROP jogando_V adiantado_ADV" :cr :dd)
      (define-rule "jogue_V retrancado_PCP" "jogue_V retrancado_ADV" :cr :dd)
      (define-rule "atuando_V improvisado_PCP" "atuando_V improvisado_ADV" :cr :dd)
      (define-rule "viseira espelhada_PCP" "viseira_N espelhada_ADJ" :cr)
      (define-rule "jogar_V encostado_PCP" "jogar_V encostado_ADV" :cr :dd)
      (define-rule "o_ART integrado_PCP de_PREP" "o_ART integrado_N de_PREP" :cr)
      (define-rule "coletor_N de_PREP dados_V" "coletor_N de_PREP dados_N" :cr)
      (define-rule "\(\_\( saída_PCP \)\_\)" "\(\_\( saída_N \)\_\)" :cr)
      (define-rule "volumes_N de_PREP dados_V" "volumes_N de_PREP dados_N" :cr)
      (define-rule "Para_PREP os_ART esquecidos_PCP" "Para_PREP os_ART esquecidos_ADJ" :cr)
      (define-rule "transferência_N \"\_\" sustentada_PCP" "transferência_N \"\_\" sustentada_ADJ" :cr)
      (define-rule "encontrar_V a_ART \(\_\( o_ART \)\_\) parceira_N \(\_\( o_N \)\_\) sonhada_V \(\_\( o_PCP \)\_\) em_PREP" "encontrar_V a_ART \(\_\( o_ART \)\_\) parceira_N \(\_\( o_ART \)\_\) sonhada_V \(\_\( o_ART \)\_\) em_PREP" :cr :dd)
      (define-rule "os_ART eleitos_PCP de_PREP" "os_ART eleitos_N de_PREP" :cr)
      (define-rule "É_V preciso_ADJ cuidados_PCP" "É_V preciso_V cuidados_N" :cr)
      (define-rule "de_PREP dados_V" "de_PREP dados_N" :cr)
      (define-rule "serifadas_PCP e_KC não_ADV serifadas_V" "serifadas_ADJ e_KC não_ADV serifadas_ADJ" :cr)
      (define-rule "posto_PCP de_PREP gasolina_N" "posto_N de_PREP gasolina_N" :cr)
      (define-rule "imaginação_N corre_V solta_PCP" "imaginação_N corre_V solta_ADV" :cr)
      (define-rule "dados_PCP de_PREP a_ART" "dados_N de_PREP a_ART" :cr)
      (define-rule "namorada_PCP de_PREP Moreno_NPROP" "namorada_N de_PREP Moreno_NPROP" :cr)
      (define-rule "tal_PROSUB uma_ART renovada_PCP" "tal_PROSUB uma_ART renovada_N" :cr)
      (define-rule "o_ART surpreendente_ADJ verdadeiro_ADJ culpado_PCP" "o_ART surpreendente_ADJ verdadeiro_ADJ culpado_N" :cr)
      (define-rule "Comidas_PCP leves_N" "Comidas_N leves_ADJ" :cr)
      (define-rule "inchado_PCP e_KC careca_N" "inchado_ADJ e_KC careca_ADJ" :cr)
      (define-rule "e_KC escrava  de_PREP" "e_KC escrava_N de_PREP" :cr)
      (define-rule "Convidado_PCP de_PREP a_ART" "Convidado_N de_PREP a_ART" :cr)
      (define-rule "outro_PROADJ confederado_PCP" "outro_PROADJ confederado_N" :cr)
      (define-rule "O_ART confederado_PCP" "O_ART confederado_N" :cr)
      (define-rule "resultado_PCP de_PREP a_ART" "resultado_N de_PREP a_ART" :cr)
      (define-rule "grande_ADJ visada_PCP niilista_N" "grande_ADJ visada_N niilista_ADJ" :cr)
      (define-rule "viabilizar_V a_ART retomada_PCP" "viabilizar_V a_ART retomada_N" :cr)
      (define-rule "a_ART retomada_PCP de_PREP" "a_ART retomada_N de_PREP" :cr)
      (define-rule "houve_V retomada_PCP" "houve_V retomada_N" :cr)
      (define-rule "faz_V sentido_PCP" "faz_V sentido_N" :cr)
      (define-rule "empregado_PCP de_PREP Melado_NPROP" "empregado_N de_PREP Melado_NPROP" :cr :dd)
      (define-rule "a_ART bacalhoada_PCP" "a_ART bacalhoada_N" :cr)
      (define-rule "fascinada_PCP e_KC horrorizada_V" "fascinada_PCP e_KC horrorizada_PCP" :cr)
      (define-rule "venial_ADJ são_V pinceladas_PCP" "venial_ADJ são_V pinceladas_N" :cr)
      (define-rule "uma_ART visada_PCP européia_N" "uma_ART visada_N européia_N" :cr)
      (define-rule "alternada_PCP e_KC sucessivamente_ADV" "alternada_ADV e_KC sucessivamente_ADV" :cr)
      (define-rule "caminhadas_PCP mais_ADV longínquas_ADJ" "caminhadas_N mais_ADV longínquas_ADJ" :cr)
      (define-rule "Obrigada_PCP ,_," "Obrigada_IN ,_," :cr)
      (define-rule "Cuidado_PCP com_PREP" "Cuidado_N com_PREP" :cr :dd)
      (define-rule "considerado_V um_ART protegido_PCP" "considerado_V um_ART protegido_N" :cr)
      (define-rule "chibatadas_PCP são_V obrigatórias_ADJ" "chibatadas_N são_V obrigatórias_ADJ" :cr)
      (define-rule "a_ART proposta_PCP" "a_ART proposta_N" :cr)
      (define-rule "Rússia_NPROP uma_ART aliada_PCP" "Rússia_NPROP uma_ART aliada_N" :cr)
      (define-rule "os_ART desempregados_PCP continuarão_VAUX" "os_ART desempregados_N continuarão_VAUX" :cr)
      (define-rule "uma_ART inimiga_ADJ acirrada_PCP" "uma_ART inimiga_N acirrada_ADJ" :cr :mm)
      (define-rule "cinco_NUM antentados_PCP" "cinco_NUM atentados_N" :cr)
      (define-rule "foram_V presos_N e_KC interrogados_PCP" "foram_V presos_V e_KC interrogados_V" :mm :cr)
      (define-rule "Obrigado_PCP \!\_\!" "Obrigado_IN \!\_\!" :cr)
      (define-rule "um_ART \'\_\' surto_PCP" "um_ART \'\_\' surto_N" :cr)
      (define-rule "que_KS os_PROSUB importados_PCP" "que_KS os_PROSUB importados_N" :cr)
      (define-rule "e_KC cruzados_PCP" "e_KC cruzados_N" :cr)
      (define-rule "o_ART maior_ADJ prejudicado_PCP" "o_ART maior_ADJ prejudicado_N" :cr)
      (define-rule "foi_PCP VAUX_PCP a_PREP" "foi_VAUX a_PREP" :cr)
      (define-rule "O_ART candidado_PCP de_PREP o_ART PRONA_NPROP" "O_ART candidato_N de_PREP o_ART PRONA_NPROP" :cr)
      (define-rule "Rio_NPROP é_V resultado_PCP de_PREP" "Rio_NPROP é_V resultado_N de_PREP" :cr)
      (define-rule "por_PREP seus_PROADJ governados_PCP" "por_PREP seus_PROADJ governados_N" :cr)
      (define-rule "bronzeamento_N é_V resultado_PCP de_PREP" "bronzeamento_N é_V resultado_N de_PREP" :cr)
      (define-rule "deputado_PCP Nelson_NPROP" "deputado_N Nelson_NPROP" :cr)
      (define-rule "os_ART chamados_N \"\_\" desaparecidos_PCP" "os_ART chamados_V \"\_\" desaparecidos_N" :cr)
      (define-rule "e_KC desaparecidos_PCP políticos" "e_KC desaparecidos_N políticos" :cr)
      (define-rule "aliado_PCP político_N de_PREP" "aliado_N político_ADJ de_PREP" :cr)
      (define-rule "mal_PCP colocado_V" "mal_ADV colocado_V" :cr)
      (define-rule "previdência  privada_PCP" "previdência_N privada_ADJ" :cr :mm)
      (define-rule "bancário_ADJ de_PREP os_ART envolvidos_PCP" "bancário_ADJ de_PREP os_ART envolvidos_N" :cr)
      (define-rule "homeopatia_N de_PREP desinformados_PCP" "homeopatia_N de_PREP desinformados_N" :cr)
      (define-rule "entre_PREP as_ART beneficiadas_PCP" "entre_PREP as_ART beneficiadas_N" :cr)
      (define-rule "de_PREP os_ART feridos_PCP foi_V" "de_PREP os_ART feridos_N foi_V" :cr)
      (define-rule "os_PROSUB similares_ADJ importados_PCP" "os_PROSUB similares_N importados_ADJ" :dd :cr)
      (define-rule "resultado_PCP de_PREP fusão_N" "resultado_N de_PREP fusão_N" :cr)
      (define-rule "entre_PREP os_ART pesquisados_PCP" "entre_PREP os_ART pesquisados_N" :cr)
      (define-rule "O_ART primeiro_ADJ beneficiado_PCP" "O_ART primeiro_ADJ beneficiado_N" :cr)
      (define-rule "assim_ADV ,_, ou_KC assado_PCP" "assim_ADV ,_, ou_KC assado_ADV" :cr)
      (define-rule "grid_N de_PREP largada_PCP" "grid_N de_PREP largada_N" :cr :dd)
      (define-rule "afetado_PCP e_KC caipira_N" "afetado_ADJ e_KC caipira_ADJ" :cr :mm)
      (define-rule "prejudicar_V os_ART aquinhoados_PCP" "prejudicar_V os_ART aquinhoados_N" :cr)
      (define-rule "Obrigado_PCP" "Obrigado_PDEN" :cr)
      (define-rule "a_ART retomada_PCP de_PREP" "a_ART retomada_N de_PREP" :cr)
      (define-rule "aliados_PCP de_PREP o_ART governo_N" "aliados_N de_PREP o_ART governo_N" :cr :dd)
      (define-rule "resultado_PCP de_PREP o_ART cruzamento_N" "resultado_N de_PREP o_ART cruzamento_N" :cr)
      (define-rule "tiveram_V resultado_PCP médio_ADJ" "tiveram_V resultado_N médio_ADJ" :cr)
      (define-rule "por_PREP escrito_PCP" "por_PREP escrito_N" :dd :cr)
      (define-rule "Infectados_PCP chegam_V a_PREP" "Infectados_N chegam_V a_PREP" :cr)
      (define-rule "estuprada_V viva_N ou_KC morta_PCP" "estuprada_V viva_ADJ ou_KC morta_ADJ" :cr :mm)
      (define-rule "um_ART quadriculado_PCP de_PREP" "um_ART quadriculado_N de_PREP" :cr)
      (define-rule "Em_PREP esse_PROADJ sentido_PCP" "Em_PREP esse_PROADJ sentido_N" :cr)
      (define-rule "ver_V com_PREP agrado_PCP" "ver_V com_PREP agrado_N" :cr)
      (define-rule "uma_ART relembrada_PCP em_PREP" "uma_ART relembrada_N em_PREP" :cr)
      (define-rule "muitos_PROSUB escritos_PCP para_PREP" "muitos_PROSUB escritos_N para_PREP" :cr)
      (define-rule "tese_N de_PREP doutorado_PCP" "tese_N de_PREP doutorado_N" :cr)
      (define-rule "deixados_V como_PREP legado_PCP" "deixados_V como_PREP legado_N" :cr)
      (define-rule "o_ART envolvido_PCP é_V" "o_ART envolvido_N é_V" :cr)
      (define-rule "era_V adequado_ADJ a_PREP o_ART caso_N" "era_V adequado_PCP a_PREP o_ART caso_N" :cr)
      (define-rule "Alienado_ADJ ._. Desinformado_PCP" "Alienado_PCP ._. Desinformado_PCP" :cr)
      (define-rule "um_ART preço_N inesperado_ADJ" "um_ART preço_N inesperado_PCP" :cr)
      (define-rule "pesado_PCP de_PREP a_ART faixa-título_N" "pesado_ADJ de_PREP a_ART faixa-título_N" :cr)
      (define-rule "desacertos_N (_( gastos_PCP )_) a_ART inflação_N" "desacertos_N (_( gastos_N )_) a_ART inflação_N" :cr)
      (define-rule "52 mil crianças abandonadas_ADJ brasileiras" "52 mil crianças abandonadas_PCP brasileiras" :cr)
      (define-rule "Atrás_PROADJ" "Atrás_ADV" :cr)
      (define-rule "só_PROADJ" "só_PDEN" :cr)

      ;;MWEs

      ;;correcoes feitas durante a etapa MWE
      (define-rule "e_KC agora_KC" "e_KC agora_ADV" :cr)
      (define-rule "mas_KC também_KC" "mas_KC também_ADV" :cr)
      (define-rule "não_KC tanto_KC" "não_ADV tanto_ADV" :cr)
      (define-rule "e_KC ora_KC" "e_KC ora_ADV" :cr)
      (define-rule "pois_KC tanto_KC" "pois_KC tanto_ADV" :cr)
      (define-rule "e_KC portanto_KC" "e_KC portanto_ADV" :cr)
      (define-rule "quando_KC não_KC" "quando_ADV não_ADV" :cr)
      (define-rule "e_KC mais_KC" "e_KC mais_ADV" :cr)
      (define-rule "e_KC por_KC" "e_KC por_PREP" :cr)  
      (define-rule "e_KC nem_KC" "e_KC nem_ADV" :cr)  
      (define-rule "e_KC assim_KC" "e_KC assim_ADV" :cr)
      (define-rule "linha_ADV a_ADV linha_ADV" "linha_N a_PREP_linha_N" :cr)
      (define-rule "e_KC e_KC" "e_KC e_KC" :typo)
      (define-rule "um_ADV pouco_ADV mais_ADV" "um_ART pouco_ADV mais_ADV" :cr)
      (define-rule "um_ADV pouquinho_ADV mais_ADV" "um_ART pouquinho_ADV mais_ADV" :cr)
      (define-rule "ao_ADV mesmo_ADV tempo_ADV" "ao_PREP mesmo_PROADJ tempo_N" :cr)
      (define-rule "um_ADV pouco_ADV" "um_ART pouco_ADV" :cr)
      (define-rule "mais_ADV para_ADV cima_ADV" "mais_ADV para_PREP cima_ADV" :cr)
      (define-rule "mais_ADV do_ADV que_ADV" "mais_ADV do_PREP que_KS" :cr)
      (define-rule "por_ADV minha_ADV causa_ADV" "por_PREP minha_PROADJ causa_N" :cr)
      (define-rule "o_ADV mais_ADV rapidamente_ADV" "o_ADV mais_ADV rapidamente_ADV" :cr)
      (define-rule "um_ADV tiquinho_ADV mais_ADV" "um_ART tiquinho_ADV mais_ADV" :cr)
      (define-rule "talvez_ADV um_ADV pouco_ADV" "talvez_ADV um_ART pouco_ADV" :cr)
      (define-rule "mais_ADV uma_ADV vez_ADV" "mais_ADV uma_ART vez_N" :cr)
      (define-rule "um_ADV pouco_ADV devagar_ADV" "um_ART pouco_ADV devagar_ADJ" :cr)
      (define-rule "um_ADV pouco_ADV assim_ADV" "um_ART pouco_ADV assim_ADV" :cr)
      (define-rule "Um_ADV pouco_ADV antes_ADV" "Um_ART pouco_ADV antes_ADV" :cr)
      (define-rule "o_ADV mais_ADV possível_ADV" "o_ART mais_ADV possível_ADJ" :cr)
      (define-rule "o_ADV mais_ADV rapidamente_ADV" "o_ART mais_ADV rapidamente_ADV" :cr)
      (define-rule "lá_ADV de_ADV cima_ADV" "lá_ADV de_PREP cima_ADV" :cr)
      (define-rule "de_ADV igual_ADV para_ADV igual_ADV" "de_PREP igual_ADJ para_PREP igual_ADJ" :cr)
      (define-rule "só_ADV por_ADV só_ADV" "só_ADV por_PREP só_ADV" :cr)

      ;;MWEs equivalentes a ADVs
      (define-rule "de_ADV manhã_ADV" "de_PREP manhã_N" :mm :mwe :misc"MWE=de_manhã|MWEPOS=ADV")      
      (define-rule "ainda_ADV por_ADV cima_ADV" "ainda_ADV por_PREP cima_ADV" :mm :mwe :misc"MWE=ainda_por_cima|MWEPOS=ADV")
      (define-rule "o_ADV quanto_ADV antes_ADV" "o_ART quanto_PREP antes_ADV" :mm :mwe :misc"MWE=o_quanto_antes|MWEPOS=ADV")
      (define-rule "por_ADV acaso_ADV" "por_PREP acaso_N" :mm :mwe :misc"MWE=por_acaso|MWEPOS=ADV") 
      (define-rule "em_ADV frente_ADV" "em_PREP frente_N" :mm :mwe :misc"MWE=em_frente|MWEPOS=ADV") 
      (define-rule "em_ADV vigor_ADV" "em_PREP vigor_N" :mm :mwe :misc"MWE=em_vigor|MWEPOS=ADV")
      (define-rule "de_ADV uma_ADV vez_ADV" "de_PREP uma_ART vez_N" :mm :mwe :misc"MWE=de_uma_vez|MWEPOS=ADV")
      (define-rule "em_ADV diante_ADV" "em_PREP diante_PREP" :mm :mwe :misc"MWE=em_diante|MWEPOS=ADV")   
      (define-rule "ponta_ADV a_ADV ponta_ADV" "ponta_N a_PREP ponta_N" :mm :mwe :misc"MWE=ponta_a_ponta|MWEPOS=ADV")
      (define-rule "mais_ADV ou_ADV menos_ADV" "mais_ADV ou_KC menos_ADV" :mm :mwe :misc"MWE=mais_ou_menos|MWEPOS=ADV") 
      (define-rule "de_ADV cabo_ADV a_ADV rabo_ADV" "de_PREP cabo_N a_PREP rabo_N" :mm :mwe :misc"MWE=|MWEPOS=ADV") 
      (define-rule "de_ADV ponta_ADV a_ADV ponta_ADV" "de_PREP ponta_N a_PREP ponta_N" :mm :mwe :misc"MWE=de_ponta_a_ponta|MWEPOS=ADV") 
      (define-rule "rasteiro_ADV à_ADV esquerda_ADV" "rasteiro_ADJ a_PREP a_ART esquerda_N" :cr :mm :mwe :misc"MWE=rasteiro_à_esquerda|MWEPOS=ADV")
      (define-rule "por_ADV diante_ADV" "por_PREP diante_PREP" :mm :mwe :misc"MWE=por_diante|MWEPOS=ADV")
      (define-rule "Frente_ADV a_ADV frente_ADV" "Frente_N a_PREP frente_N" :mm :mwe :misc"MWE=Frente_a_frente|MWEPOS=ADV")  
      (define-rule "à_ADV noite_ADV" "a_PREP a_ART noite_N" :cr :mm :mwe :misc"MWE=a_a_noite|MWEPOS=ADV")  
      (define-rule "a_ADV a_ADV noite_ADV" "a_PREP a_ART noite_N" :mm :mwe :misc"MWE=a_a_noite|MWEPOS=ADV")
      (define-rule "a_ADV a_ADV tarde_ADV" "a_PREP a_ART tarde_N" :mm :mwe :misc"MWE=a_a_tarde|MWEPOS=ADV")
      (define-rule "Nem_ADV de_ADV longe_ADV" "Nem_ADV de_PREP longe_ADV" :mm :mwe :misc"MWE=Nem_de_longe|MWEPOS=ADV") 
      (define-rule "ponto_ADV a_ADV ponto_ADV" "ponto_N a_PREP ponto_N" :mm :mwe :misc"MWE=ponto_a_ponto|MWEPOS=ADV")   
      (define-rule "de_ADV trás_ADV" "de_PREP trás_ADV" :mm :mwe :misc"MWE=de_trás|MWEPOS=ADV")
      (define-rule "para_ADV frente_ADV" "para_PREP frente_N" :mm :mwe :misc"MWE=para_frente|MWEPOS=ADV") 
      (define-rule "de_ADV graça_ADV" "de_PREP graça_N" :mm :mwe :misc"MWE=de_graça|MWEPOS=ADV")
      (define-rule "De_ADV vez_ADV em_ADV quando_ADV" "De_PREP vez_N em_PREP quando_KS" :mm :mwe :misc"MWE=De_vez_em_quando|MWEPOS=ADV")
      (define-rule "de_ADV vez_ADV em_ADV quando_ADV" "de_PREP vez_N em_PREP quando_KS" :mm :mwe :misc"MWE=de_vez_em_quando|MWEPOS=ADV")
      (define-rule "por_ADV sua_ADV vez_ADV" "por_PREP sua_PROADJ vez_N" :mm :mwe :misc"MWE=por_sua_vez|MWEPOS=ADV")   
      (define-rule "a_ADV contragosto_ADV" "a_PREP contragosto_N" :mm :mwe :misc"MWE=a_contragosto|MWEPOS=ADV")
      (define-rule "pra_ADV lá_ADV de_ADV" "pra_PREP lá_ADV de_PREP" :mm :mwe :misc"MWE=pra_lá_de|MWEPOS=ADV") 
      (define-rule "em_ADV breve_ADV" "em_PREP breve_ADV" :mm :mwe :misc"MWE=em_breve|MWEPOS=ADV")   
      (define-rule "De_ADV vez_ADV" "De_PREP vez_N" :mm :mwe :misc"MWE=De_vez|MWEPOS=ADV")  
      (define-rule "Até_ADV Que_ADV Enfim_ADV" "Até_PREP Que_KC Enfim_ADV" :mm :mwe :misc"MWE=|Até_Que_EnfimMWEPOS=ADV")
      (define-rule "de_ADV volta_ADV" "de_PREP volta_N" :mm :mwe :misc"MWE=de_volta|MWEPOS=ADV")   
      (define-rule "por_ADV acaso_ADV" "por_PREP acaso_N" :mm :mwe :misc"MWE=por_acaso|MWEPOS=ADV") 
      (define-rule "lado_ADV a_ADV lado_ADV" "lado_N a_PREP lado_N" :mm :mwe :misc"MWE=lado_a_lado|MWEPOS=ADV")  
      (define-rule "volta_ADV e_ADV meia_ADV" "volta_N e_KC meia_ADJ" :mm :mwe :misc"MWE=volta_e_meia|MWEPOS=ADV")  
      (define-rule "em_ADV primeiro_ADV lugar_ADV" "em_PREP primeiro_ADJ lugar_N" :mm :mwe :misc"MWE=em_primeiro_lugar|MWEPOS=ADV")    
      (define-rule "de_ADV modo_ADV algum_ADV" "de_PREP modo_N algum_PROADJ" :mm :mwe :misc"MWE=de_modo_algum|MWEPOS=ADV") 
      (define-rule "pelo_ADV contrário_ADV" "pelo_PREP contrário_N" :mm :mwe :misc"MWE=pelo_contrário|MWEPOS=ADV")
      (define-rule "por_ADV sua_ADV vez_ADV" "por_PREP sua_PROSUB vez_N" :mm :mwe :misc"MWE=por_sua_vez|MWEPOS=ADV")  
      (define-rule "de_ADV cima_ADV a_ADV baixo_ADV" "de_PREP cima_ADV a_PREP baixo_ADV" :mm :mwe :misc"MWE=de_cima_a_baixo|MWEPOS=ADV")    
      (define-rule "Cara_ADV a_ADV cara_ADV" "Cara_N a_PREP cara_N" :mm :mwe :misc"MWE=Cara_a_cara|MWEPOS=ADV")   
      (define-rule "um_ADV a_ADV um_ADV" "um_PROSUB a_PREP um_PROSUB" :mm :mwe :misc"MWE=um_a_um|MWEPOS=ADV")
      (define-rule "hoje_ADV em_ADV dia_ADV" "hoje_ADV em_PREP dia_N" :mm :mwe :misc"MWE=hoje_em_dia|MWEPOS=ADV")
      (define-rule "cada_ADV vez_ADV mais_ADV" "cada_PROADJ vez_N mais_ADV" :mm :mwe :misc"MWE=cada_vez_mais|MWEPOS=ADV")
      (define-rule "de_ADV alto_ADV a_ADV baixo_ADV" "de_PREP alto_ADV a_PREP baixo_ADV" :mm :mwe :misc"MWE=de_alto_a_baixo|MWEPOS=ADV")
      (define-rule "o_ADV quanto_ADV antes_ADV" "o_ART quanto_ADV antes_ADV" :mm :mwe :misc"MWE=o_quanto_antes|MWEPOS=ADV")
      (define-rule "de_ADV vez_ADV em_ADV quando_ADV" "de_PREP vez_N em_PREP quando_ADV" :mm :mwe :misc"MWE=de_vez_em_quando|MWEPOS=ADV")
      (define-rule "passo_ADV a_ADV passo_ADV" "passo_N a_PREP passo_N" :mm :mwe :misc"MWE=passo_a_passo|MWEPOS=ADV")
      (define-rule "por_ADV sua_ADV vez_ADV" "por_PREP sua_PROADJ vez_N" :mm :mwe :misc"MWE=por_sua_vez|MWEPOS=ADV")
      (define-rule "aqui_ADV e_ADV ali_ADV" "aqui_ADV e_KC ali_ADV" :mm :mwe :misc"MWE=aqui_e_ali|MWEPOS=ADV")
      (define-rule "por_ADV acaso_ADV" "por_PREP acaso_N" :mm :mwe :misc"MWE=por_acaso|MWEPOS=ADV")
      (define-rule "só_ADV por_ADV só_ADV" "só_ADV por_PREP só_ADV" :mm :mwe :misc"MWE=só_por_só|MWEPOS=ADV")
      (define-rule "em_ADV particular_ADV" "em_PREP particular_N" :mm :mwe :misc"MWE=em_particular|MWEPOS=ADV")
      (define-rule "em_ADV vigor_ADV" "em_PREP vigor_N" :mm :mwe :misc"MWE=em_vigor|MWEPOS=ADV")
      (define-rule "quase_ADV tanto_ADV quanto_ADV" "quase_ADV tanto_ADV quanto_ADV" :mm :mwe :misc"MWE=quase_tanto_quanto|MWEPOS=ADV")
      (define-rule "por_ADV completo_ADV" "por_PREP completo_N" :mm :mwe :misc"MWE=por_completo|MWEPOS=ADV")
      (define-rule "em_ADV particular_ADV" "em_PREP particular_N" :mm :mwe :misc"MWE=em_particular|MWEPOS=ADV")
      (define-rule "em_ADV seguida_ADV" "em_PREP seguida_N" :mm :mwe :misc"MWE=em_seguida|MWEPOS=ADV")
      (define-rule "pouco_ADV a_ADV pouco_ADV" "pouco_ADV a_PREP pouco_ADV" :mm :mwe :misc"MWE=pouco_a_pouco|MWEPOS=ADV")
      (define-rule "dos_ADV pés_ADV à_ADV cabeça_ADV" "dos_PREP pés_N à_PREP cabeça_N" :mm :mwe :misc"MWE=dos_pés_a_cabeça|MWEPOS=ADV")
      (define-rule "ainda_ADV por_ADV cima_ADV" "ainda_ADV por_PREP cima_ADV" :mm :mwe :misc"MWE=ainda_por_cima|MWEPOS=ADV")
      (define-rule "Às_ADV vezes_ADV" "Às_PREP vezes_N" :mm :mwe :misc"MWE=Às_vezes|MWEPOS=ADV")
      (define-rule "cada_ADV vez_ADV mais_ADV" "cada_PROADJ vez_N mais_ADV" :mm :mwe :misc"MWE=cad_vez_mais|MWEPOS=ADV")
      (define-rule "aí_ADV por_ADV diante_ADV" "aí_ADV por_PREP diante_ADV" :mm :mwe :misc"MWE=aí_por_diante|MWEPOS=ADV")
      (define-rule "de_ADV cima_ADV para_ADV baixo_ADV" "de_PREP cima_ADV para_PREP baixo_ADV" :mm :mwe :misc"MWE=de_cima_para_baixo|MWEPOS=ADV")
      (define-rule "de_ADV baixo_ADV para_ADV cima_ADV" "de_PREP baixo_ADV para_PREP cima_ADV" :mm :mwe :misc"MWE=de_baixo_para_cima|MWEPOS=ADV")
      (define-rule "em_ADV frente_ADV" "em_PREP frente_N" :mm :mwe :misc"MWE=em_frente|MWEPOS=ADV")
      (define-rule "cada_ADV vez_ADV mais_ADV" "cada_PROADJ vez_N mais_ADV" :mm :mwe :misc"MWE=cada_vez_mais|MWEPOS=ADV")
      (define-rule "hoje_ADV em_ADV dia_ADV" "hoje_ADV em_PREP dia_N" :mm :mwe :misc"MWE=hoje_em_dia|MWEPOS=ADV")
      (define-rule "por_ADV sua_ADV vez_ADV" "por_PREP sua_PROADJ vez_N" :mm :mwe :misc"MWE=por_sua_vez|MWEPOS=ADV")
      (define-rule "por_ADV trás_ADV" "por_PREP trás_ADV" :mm :mwe :misc"MWE=por_trás|MWEPOS=ADV")
      (define-rule "vez_ADV por_ADV outra_ADV" "vez_N por_PREP outra_ADJ" :mm :mwe :misc"MWE=vez_por_outra|MWEPOS=ADV")
      (define-rule "ao_ADV pé_ADV da_ADV letra_ADV" "ao_PREP pé_N da_PREP letra_N" :mm :mwe :misc"MWE=ao_pé_da_letra|MWEPOS=ADV")
      (define-rule "a_ADV céu_ADV aberto_ADV" "a_PREP céu_N aberto_PCP" :mm :mwe :misc"MWE=a_céu_aberto|MWEPOS=ADV")
      (define-rule "assim_ADV por_ADV diante_ADV" "assim_ADV por_PREP diante_ADV" :mm :mwe :misc"MWE=assim_por_diante|MWEPOS=ADV")
      (define-rule "ao_ADV ar_ADV livre_ADV" "ao_PREP ar_N livre_ADJ" :mm :mwe :misc"MWE=ao_ar_livre|MWEPOS=ADV")
      (define-rule "de_ADV bom_ADV grado_ADV" "de_PREP bom_ADJ grado_N" :mm :mwe :misc"MWE=de_bom_grado|MWEPOS=ADV")
      (define-rule "por_ADV aí_ADV afora_ADV" "por_PREP aí_ADV afora_ADV" :mm :mwe :misc"MWE=por_aí_afora|MWEPOS=ADV")
      (define-rule "com_ADV bons_ADV olhos_ADV" "com_PREP bons_ADJ olhos_N" :mm :mwe :misc"MWE=com_bons_olhos|MWEPOS=ADV")
      (define-rule "em_ADV geral_ADV" "em_PREP geral_ADJ" :mm :mwe :misc"MWE=em_geral|MWEPOS=ADV")
      (define-rule "De_ADV vez_ADV em_ADV quando_ADV" "De_PREP vez_N em_PREP quando_ADV" :mm :mwe :misc"MWE=De_vez_em_quando|MWEPOS=ADV")
      (define-rule "de_ADV fato_ADV" "de_PREP fato_N" :mm :mwe :misc"MWE=de_fato|MWEPOS=ADV")
      (define-rule "Em_ADV primeiro_ADV lugar_ADV" "Em_PREP primeiro_ADJ lugar_N" :mm :mwe :misc"MWE=Em_primeiro_lugar|MWEPOS=ADV")
      (define-rule "ainda_ADV por_ADV cima_ADV" "ainda_ADV por_PREP cima_ADV" :mm :mwe :misc"MWE=ainda_por_cima|MWEPOS=ADV")
      (define-rule "de_ADV novo_ADV" "de_PREP novo_ADJ" :mm :mwe :misc"MWE=de_novo|MWEPOS=ADV")
      (define-rule "pra_ADV lá_ADV de_ADV" "pra_PREP lá_ADV de_PREP" :mm :mwe :misc"MWE=pra_lá_de|MWEPOS=ADV")
      (define-rule "mais_ADV um_ADV pouco_ADV" "mais_ADV um_ART pouco_ADV" :mm :mwe :misc"MWE=mais_um_pouco|MWEPOS=ADV")
      (define-rule "baixo_ADV para_ADV cima_ADV" "baixo_ADV para_PREP cima_ADV" :mm :mwe :misc"MWE=baixo_pra_cima|MWEPOS=ADV")
      (define-rule "nem_ADV ao_ADV menos_ADV" "nem_KC ao_PREP menos_ADV" :mm :mwe :misc"MWE=nem_ao_menos|MWEPOS=ADV")
      (define-rule "De_ADV quando_ADV em_ADV quando_ADV" "De_PREP quando_ADV em_PREP quando_ADV" :mm :mwe :misc"MWE=De_quando_em_quando|MWEPOS=ADV")
      (define-rule "a_ADV olho_ADV nu_ADV" "a_PREP olho_N nu_ADJ" :mm :mwe :misc"MWE=a_olho_nu|MWEPOS=ADV")
      (define-rule "por_ADV acaso_ADV" "por_PREP acaso_N" :mm :mwe :misc"MWE=por_acaso|MWEPOS=ADV")
      (define-rule "mais_ADV um_ADV pouco_ADV" "mais_ADV um_ART pouco_ADV" :mm :mwe :misc"MWE=mais_um_pouco|MWEPOS=ADV")
      (define-rule "de_ADV quando_ADV em_ADV quando_ADV" "de_PREP quando_ADV em_PREP quando_ADV" :mm :mwe :misc"MWE=de_quando_em_quando|MWEPOS=ADV")
      (define-rule "Por_ADV outro_ADV lado_ADV" "Por_PREP outro_ADJ lado_N" :mm :mwe :misc"MWE=Por_outro_lado|MWEPOS=ADV")
      (define-rule "sem_ADV mais_ADV nem_ADV menos_ADV" "sem_PREP mais_ADV nem_PREP menos_ADV" :mm :mwe :misc"MWE=sem_mais_nem_menos|MWEPOS=ADV")
      (define-rule "Hoje_ADV em_ADV dia_ADV" "Hoje_ADV em_PREP dia_N" :mm :mwe :misc"MWE=Hoje_em_dia|MWEPOS=ADV")
      (define-rule "em_ADV vigor_ADV" "em_PREP vigor_N" :mm :mwe :misc"MWE=em_vigor|MWEPOS=ADV")

      ;;MWEs equivalentes a CONJs
      (define-rule "Mas_KC tanto_KC" "Mas_KC tanto_ADV" :mm :mwe :misc"MWE=Mas_tanto|MWEPOS=CONJ")    
      (define-rule "no_KC entanto_KC" "no_PREP entanto_ADV" :mm :mwe :misc"MWE=no_entanto|MWEPOS=CONJ") 
      (define-rule "No_KC entanto_KC" "No_PREP entanto_ADV" :mm :mwe :misc"MWE=No_entanto|MWEPOS=CONJ")  
      (define-rule "bem_KC como_KC" "bem_ADV como_PREP" :mm :mwe :misc"MWE=bem_como|MWEPOS=CONJ")  
      (define-rule "não_KC só_KC" "não_ADV só_ADV" :mm :mwe :misc"MWE=não_só|MWEPOS=CONJ")  
      (define-rule "como_KC também_KC" "como_PREP também_ADV" :mm :mwe :misc"MWE=como_também|MWEPOS=CONJ")  
      (define-rule "assim_KC como_KC" "assim_ADV como_PREP" :mm :mwe :misc"MWE=assim_como|MWEPOS=CONJ")    
      (define-rule "Assim_KC como_KC" "Assim_ADV como_PREP" :mm :mwe :misc"MWE=Assim_como|MWEPOS=CONJ")   
      (define-rule "no_KC entando_KC" "no_PREP entando_ADV" :typo :mm :mwe :misc"MWE=no_entanto|MWEPOS=CONJ")
      (define-rule "a_KC não_KC ser_KC" "a_KC não_ADV ser_V" :mm :mwe :misc"MWE=a_não_ser|MWEPOS=CONJ")  
      (define-rule "A_KC não_KC ser_KC" "A_KC não_ADV ser_V" :mm :mwe :misc"MWE=A_nâo_ser|MWEPOS=CONJ")  
      (define-rule "Não_KC só_KC" "Não_ADV só_ADV" :mm :mwe :misc"MWE=Não_só|MWEPOS=CONJ") 
      (define-rule "Mesmo_KC assim_KC" "Mesmo_KC assim_ADV" :mm :mwe :misc"MWE=Mesmo_assim|MWEPOS=CONJ")
      (define-rule "Só_KC que_KC" "Só_ADV que_KC" :mm :mwe :misc"MWE=Só_que|MWEPOS=CONJ")
      (define-rule "Ou_KC seja_KC" "Ou_KC seja_V" :mm :mwe :misc"MWE=Ou_seja|MWEPOS=CONJ")
      (define-rule "Ainda_KC assim_KC" "Ainda_ADV assim_ADV" :mm :mwe :misc"MWE=Ainda_assim|MWEPOS=CONJ")
      (define-rule "apesar_KC disso_KC" "apesar_KC disso_PROSUB" :mm :mwe :misc"MWE=apesar_disso|MWEPOS=CONJ")
      (define-rule "além_KC de_KC" "além_ADV de_PREP" :mm :mwe :misc"MWE=além_de|MWEPOS=CONJ")
      (define-rule "Ainda_KC assim_KC" "Ainda_ADV assim_ADV" :mm :mwe :misc"MWE=Ainda_assim|MWEPOS=CONJ")
      (define-rule "ainda_KC assim_KC" "ainda_ADV assim_ADV" :mm :mwe :misc"MWE=ainda_assim|MWEPOS=CONJ") 
      (define-rule "Mesmo_KC assim_KC" "Mesmo_KC assim_ADV" :mm :mwe :misc"MWE=Mesmo_assim|MWEPOS=CONJ")
      (define-rule "quer_KC dizer_KC" "quer_V dizer_V" :mm :mwe :misc"MWE=quer_dizer|MWEPOS=CONJ")

      ;; regra PDEN 1
      (define-rule "isto_PDEN é_PDEN" "isto_PROSUB é_V" :mm :mwe :misc"MWE=isto_é|MWEPOS=ADV")
      (define-rule "Isto_PDEN é_PDEN" "Isto_PROSUB é_V" :mm :mwe :misc"MWE=Isto_é|MWEPOS=ADV")
      (define-rule "ou_PDEN seja_PDEN" "ou_KC seja_V" :mm :mwe :misc"MWE=ou_seja|MWEPOS=ADV")
      (define-rule "Ou_PDEN seja_PDEN" "Ou_KC seja_V" :mm :mwe :misc"MWE=Ou_seja|MWEPOS=ADV")
      (define-rule "por_PDEN exemplo_PDEN" "por_PREP exemplo_N" :mm :mwe :misc"MWE=por_exemplo|MWEPOS=ADV")
      (define-rule "Por_PDEN exemplo_PDEN" "Por_PREP exemplo_N" :mm :mwe :misc"MWE=Por_exemplo|MWEPOS=ADV")
      (define-rule "p._PDEN ex._PDEN" "p._PREP ex._N" :mm :mwe :misc"MWE=p. ex.|MWEPOS=ADV")
      (define-rule "quer_PDEN dizer_PDEN" "quer_V dizer_V" :mm :mwe :misc"MWE=quer_dizer|MWEPOS=ADV")
      (define-rule "Quer_PDEN dizer_PDEN" "Quer_V dizer_V" :mm :mwe :misc"MWE=Quer_dizer|MWEPOS=ADV")
      (define-rule "Pois_PDEN é_PDEN" "Pois_KC é_V" :mm :mwe :misc"MWE=Pois_é|MWEPOS=ADV")
      (define-rule "por_PDEN X vai_PDEN" "por_PREP X vai_V" :typo)
      (define-rule "por_PDEN diante_PDEN" "por_PREP diante_PREP" :mm :mwe :misc"MWE=por_diante|MWEPOS=ADV")
      (define-rule "Por_PDEN diente_PDEN" "Por_PREP diante_PREP" :mm :mwe :misc"MWE=Por_diante|MWEPOS=ADV")
      (define-rule "em_PDEN diante_PDEN" "em_PREP diante_PREP" :mm :mwe :misc"MWE=em_diante|MWEPOS=ADV")  
      (define-rule "Em_PDEN diente_PDEN" "Em_PREP diante_PREP" :mm :mwe :misc"MWE=Em_diante|MWEPOS=ADV")
      (define-rule "de_PDEN aqui_PDEN em_PDEN diante_PDEN" "de_PREP aqui_ADV em_PREP diante_PREP" :mm :mwe :misc"MWE=de_aqui_em_diante|MWEPOS=ADV")
      (define-rule "de_PDEN agora_PDEN em_PDEN diante_PDEN" "de_PREP agora_ADV em_PREP diante_PREP" :mm :mwe :misc"MWE=de_agora_em_diante|MWEPOS=ADV")
      (define-rule "assim_PDEN em_PDEN diante_PDEN" "assim_ADV em_PREP diante_PREP" :mm :mwe :misc"MWE=assim_em_diante|MWEPOS=ADV")
      (define-rule "Assim_PDEN em_PDEN diante_PDEN" "Assim_ADV em_PREP diante_PREP" :mm :mwe :misc"MWE=Assim_em_diante|MWEPOS=ADV")    
      (define-rule "assim_PDEN por_PDEN diante_PDEN" "assim_ADV por_PREP diante_PREP" :mm :mwe :misc"MWE=assim_por_diante|MWEPOS=ADV")
      (define-rule "Assim_PDEN por_PDEN diante_PDEN" "Assim_ADV por_PREP diante_PREP" :mm :mwe :misc"MWE=Assim_por_diante|MWEPOS=ADV")
      (define-rule "afinal_PDEN de_PDEN contas_PDEN" "Afinal_ADV de_PREP contas_N" :mm :mwe :misc"MWE=afinal_de_contas|MWEPOS=ADV")
      (define-rule "ao_PDEN menos_PDEN" "ao_PREP menos_ADV" :mm :mwe :misc"MWE=ao_menos|MWEPOS=ADV")
      (define-rule "Ao_PDEN menos_PDEN" "Ao_PREP menos_ADV" :mm :mwe :misc"MWE=Ao_menos|MWEPOS=ADV")
      (define-rule "pelo_PDEN menos_PDEN" "pelo_PREP menos_ADV" :mm :mwe :misc"MWE=pelo_menos|MWEPOS=ADV")
      (define-rule "ñpelo_N menos_PDEN" "ñpelo_PREP menos_ADV" :cr :typo)
      (define-rule "por_PDEN fim_PDEN" "por_PREP fim_N" :mm :mwe :misc"MWE=por_fim|MWEPOS=ADV")
      (define-rule "pois_PDEN bem_PDEN" "pois_PREP bem_ADV" :mm :mwe :misc"MWE=pois_bem|MWEPOS=ADV")
      (define-rule "Pois_PDEN bem_PDEN" "Pois_PREP bem_ADV" :mm :mwe :misc"MWE=Pois_bem|MWEPOS=ADV")

      ;; regra PDEN 2
      (define-rule "ou_PDEN então_PDEN" "ou_KC então_ADV" :mm)
      (define-rule "Ou_PDEN então_PDEN" "Ou_KC então_ADV" :mm)
      (define-rule "ou_PDEN melhor_PDEN" "ou_KC melhor_ADV" :mm)
      (define-rule "Ou_PDEN melhor_PDEN" "Ou_KC melhor_ADV" :mm)
      (define-rule "quando_PDEN muito_PDEN" "quando_ADV muito_ADV" :dd)
      (define-rule "que_PDEN instalaram_V" "que_KS instalaram_V" :cr)
      (define-rule "por_PREP si_PROPESS mesmas_PDEN" "por_PREP si_PROPESS mesmas_PROADJ" :cr)
      (define-rule "Olh*_V só_PDEN" "Olh*_V só_ADV" :dd)
      (define-rule "olh*_V só_PDEN" "Olh*_V só_ADV" :dd)
      (define-rule "Escut*_V só_PDEN" "Escut*_V só_ADV" :dd)
      (define-rule "escut*_V só_PDEN" "escut*_V só_ADV" :dd)
      (define-rule "Vej*_V só_PDEN" "Vej*_V só_ADV" :dd)
      (define-rule "vej*_V só_PDEN" "vej*_V só_ADV" :dd)
      (define-rule "é_PDEN que_PDEN" "é_V que_ADV" :dd)

      ;; regra PDEN 3
      (define-rule "então_PDEN" "então_ADV" :dd)
      (define-rule "Então_PDEN" "Então_ADV" :dd)
      (define-rule "também_PDEN" "também_ADV" :dd)
      (define-rule "Também_PDEN" "Também_ADV" :dd)
      (define-rule "tambem_PDEN" "também_ADV" :cr)
      (define-rule "idem_PDEN" "idem_ADV" :dd)
      (define-rule "Idem_PDEN" "Idem_ADV" :dd)
      (define-rule "talvez_PDEN" "talvez_ADV" :dd)
      (define-rule "Talvez_PDEN" "Talvez_ADV" :dd)
      (define-rule "apenas_PDEN" "apenas_ADV" :dd)
      (define-rule "Apenas_PDEN" "Apenas_ADV" :dd)
      (define-rule "ainda_PDEN" "ainda_ADV" :dd)
      (define-rule "Ainda_PDEN" "Ainda_ADV" :dd)
      (define-rule "mesmo_PDEN" "mesmo_ADV" :dd)
      (define-rule "Mesmo_PDEN" "Mesmo_ADV" :dd)
      (define-rule "só_PDEN" "só_ADV" :dd)
      (define-rule "Só_PDEN" "Só_ADV" :dd)
      (define-rule "já_PDEN" "já_ADV" :dd)
      (define-rule "Já_PDEN" "Já_ADV" :dd)
      (define-rule "aí_PDEN" "aí_ADV" :dd)
      (define-rule "Aí_PDEN" "Aí_ADV" :dd)
      (define-rule "nem_PDEN" "nem_ADV" :dd)
      (define-rule "Nem_PDEN" "Nem_ADV" :dd)
      (define-rule "daí_PDEN" "daí_ADV" :dd)
      (define-rule "Daí_PDEN" "Daí_ADV" :dd)
      (define-rule "eis_PDEN" "eis_ADV" :dd)
      (define-rule "Eis_PDEN" "Eis_ADV" :dd)
      (define-rule "sequer_PDEN" "sequer_ADV" :dd)
      (define-rule "Sequer_PDEN" "Sequer_ADV" :dd)
      (define-rule "assim_PDEN" "assim_ADV" :dd)
      (define-rule "Assim_PDEN" "Assim_ADV" :dd)
      (define-rule "somente_PDEN" "somente_ADV" :dd)
      (define-rule "Somente_PDEN" "Somente_ADV" :dd)
      (define-rule "sobretudo_PDEN" "sobretudo_ADV" :dd)
      (define-rule "inclusive_PDEN" "inclusive_ADV" :dd)
      (define-rule "Inclusive_PDEN" "Inclusive_ADV" :dd)
      (define-rule "iclusive_PDEN" "inclusive_ADV" :dd)
      (define-rule "menos_PDEN" "menos_ADV" :dd)
      (define-rule "agora_PDEN" "agora_ADV" :dd)
      (define-rule "sóó_PDEN" "sóó_PDEN" :typo)
      (define-rule "não_PDEN" "não_ADV" :cr)
      (define-rule "Não_PDEN" "Não_ADV" :cr)
      (define-rule "senão_PDEN" "senão_ADV" :dd)
      (define-rule "Senão_PDEN" "Senão_ADV" :dd)
      (define-rule "tão_PDEN" "tão_ADV" :mm)
      (define-rule "decerto_PDEN" "decerto_ADV" :dd)
      (define-rule "fora_PDEN" "fora_ADV" :dd)
      (define-rule "logo_PDEN" "logo_ADV" :dd)
      (define-rule "aliás_PDEN" "aliás_ADV" :dd)
      (define-rule "Aliás_PDEN" "Aliás_ADV" :dd)
      (define-rule "agora_PDEN ,_," "agora_ADV ,_," :mm)
      (define-rule "Agora_PDEN ,_," "Agora_ADV ,_," :mm)
      (define-rule "afinal_PDEN" "afinal_ADV" :dd)
      (define-rule "Afinal_PDEN" "Afinal_ADV" :dd)
      (define-rule "enfim_PDEN" "enfim_ADV" :dd)
      (define-rule "ademais_PDEN" "ademais_ADV" :dd)
      (define-rule "melhor_PDEN" "melhor_ADV" :dd)
      (define-rule "bem_PDEN" "bem_ADV" :mm)
      (define-rule "Bem_PDEN" "Bem_ADV" :mm)
      (define-rule "bom_PDEN" "bom_ADV" :mm)
      (define-rule "Bom_PDEN" "Bom_ADV" :mm)
      (define-rule "Logo_PDEN quem_PROSUB" "Logo_ADV quem_PROSUB" :dd)
      (define-rule "cadê_PDEN" "cadê_ADV" :dd)
      (define-rule "Cadê_PDEN" "Cadê_ADV" :dd)
      (define-rule "tal_PDEN" "tal_ADV" :dd)

      ;; regra PDEN 4
      (define-rule "etc_PDEN" "etc_X" :mm)
      (define-rule "etc._PDEN" "etc._X" :mm)
      (define-rule "etc_PDEN" "etc_X" :mm)
      (define-rule "etcétera_PDEN" "etcétera_X" :mm)
      (define-rule "sic_PDEN" "sic_X" :dd)

      ;; regra PDEN 5
      (define-rule "foi_PDEN" "foi_V" :dd)
      (define-rule "Foi_PDEN" "Foi_V" :dd)
      (define-rule "era_PDEN" "era_V" :dd) 
      (define-rule "São_PDEN" "são_V" :cr)
      (define-rule "é_PDEN" "é_V" :mm) 
      (define-rule "É_PDEN" "É_V" :mm)
      (define-rule "serão_PDEN" "serão_V" :cr) 

      ;; regra PDEN 6
      (define-rule "salvo_PDEN" "salvo_PREP" :dd) 
      (define-rule "de_PDEN" "de_PREP" :cr)
      (define-rule "até_PDEN" "até_PREP" :dd)
      (define-rule "Até_PDEN" "Até_PREP" :dd)

      ;; regra PDEN 7
      (define-rule "Me_PROPESS Too_PDEN" "Me_NPROP Too_NPROP" :cr)
      (define-rule "I._PDEN é_PDEN ,_," "I._X é_V ,_," :cr :typo)
      (define-rule ",_PDEN ,_PDEN" ",_," :cr)

      ;; regra PDEN 8
      (define-rule "Ciao_PDEN" "Ciao_INTJ" :mm)
      (define-rule "Obrigad*_PDEN" "Obrigad*_INTJ" :mm)
      (define-rule "que_PDEN" "que_KC" :dd)
      (define-rule "daqui_PDEN" "daqui_PREP" :mm)
      (define-rule "ó_PDEN" "ó_PART" :mm)
      (define-rule "e_PDEN" "e_KC" :mm)
      (define-rule "mesmos_PDEN" "mesmos_PROADJ" :mm)
      (define-rule "marré_PDEN marré_PDEN" "marré_ADJ marré_ADJ" :dd)

      ;; correcoes gerais
      (define-rule "à_PREP" "a_PREP a_ART" :cr)
      (define-rule "de_N" "de_PREP" :dd)
      (define-rule "da_N" "de_PREP a_ART" :dd)
      (define-rule "do_N" "de_PREP o_ART" :dd)
      (define-rule "d'_N" "d'_PREP" :dd)
      (define-rule "quilos_N per_N capta/ano_N" "quilos_N per_PREP capta/ano_N" :dd)
      (define-rule "brasileiros_N sem_N terra_N" "brasileiros_N sem_PREP terra_N" :dd)
      (define-rule "mosca_N de_N o_N chifre_N" "mosca_N de_PREP o_ART chifre_N" :dd)
      (define-rule "lúpus_N eritematoso_N sistêmico_N" "lúpus_N eritematoso_ADJ sistêmico_ADJ" :dd)
      (define-rule "suspensão_N condicional_N da_N pena_N" "suspensão_N condicional_ADJ de_PREP a_ART pena_N" :mm)
      (define-rule "Minas_N e_N Energia_N" "Minas_N e_KC Energia_N" :cr)
      (define-rule "lei_N n_N º_N" "lei_N n_N º_X" :cr :typo)
      (define-rule "segunda_N feira_N" "segunda_N feira_N" :typo)
      (define-rule "Meio_N a_N meio_N" "Meio_N a_PREP meio_N" :cr)
      (define-rule "Milwaukee_N Bucks_N" "Milwaukee_NPROP Bucks_NPROP" :cr)
      (define-rule "Portland_N ,_, La_N Clippers_N" "Portland_NPROP ,_, La_NPROP Clippers_NPROP" :cr)
      (define-rule "Phoenix_N Suns_N Sacramento_N Kings_N" "Phoenix_NPROP Suns_NPROP Sacramento_NPROP Kings_NPROP" :cr)
      (define-rule "Atlanta_N" "Atlanta_NPROP" :cr)
      (define-rule "Atalanta[_N x_N Udinese(23)_N ;_; Foggia(27)_N x_N Piacenza(27)_N ;_; Genoa(27)_N x_N Lazio(37)_N ;_; Lecce(11,_N aritimeticamente_N em_N a_N Série_N B)_N x_N Torino(30)_N ;_; Reggiana(22,_N um_N jogo_N a_N menos)_N x_N Napoli(30)_N ;_; Roma(26)_N x_N Cagliari(27)_N" "Atalanta_NPROP x_X Udinese_NPROP (_( 23_NUM )_) ;_; Foggia_NPROP (_( 27_NUM )_) x_X  Piacenza_NPROP (_( 27_NUM )_) ;_; Genoa_NPROP (_( 27_NUM  )_) x_X  Lazio_NPROP (_( 37_NUM )_) ;_; Lecce_NPROP (_( 11_NUM ,_, aritimeticamente_ADV em_PREP a_ART Série_N B_N )_) x_X Torino_NPROP (_( 30_NUM )_) ;_; Reggiana_NPROP (_( 22_NUM ,_, um_NUM jogo_N a_PROADJ menos_PROADJ )_) x_X  Napoli_NPROP (_( 30_NUM )_) ;_; Roma_NPROP (_( 26_NUM )_) x_X  Cagliari_NPROP (_( 27_NUM )_)" :cr :dd)
      (define-rule "Deus_N nos_N acuda_N" "Deus_NPROP nos_PROPESS acuda_V" :dd)
      (define-rule "Peso_N PESADO_N Dirigentes_N" "Peso_N PESADO_ADJ Dirigentes_N" :cr :dd)
      (define-rule "Que_N Deus_N nos_N ajude_N" "Que_KS Deus_NPROP nos_PROPESS ajude_V" :mm)
      (define-rule "seleção_N todo_N mundo_N pára_V" "seleção_N todo_PROADJ mundo_N pára_V" :cr)
      (define-rule "Que_N Deus_N Nos_N Ajude_N" "Que_KS Deus_NPROP Nos_PROPESS Ajude_V" :dd)
      (define-rule "boca_N Coordenador_N rebate_N" "boca_N Coordenador_N rebate_V" :cr)
      (define-rule "Piloto_N fez_N" "Piloto_N fez_V" :cr)
      (define-rule "Jogue_N Limpo_N no_N Esporte_N e_N na_N Vida_N" "Jogue_V Limpo_ADV em_PREP o_ART Esporte_N e_KC em_PREP a_ART Vida_N" :mm)
      (define-rule "jogo_N Milan_N" "jogo_N Milan_NPROP" :cr)
      (define-rule "Salzburg_N 0_N" "Salzburg_NPROP 0_NUM" :cr)
      (define-rule "Hp_N DeskJet_N" "Hp_NPROP DeskJet_NPROP" :cr)
      (define-rule "engenharia/sistemas_N digitais_N sistemas_N" "engenharia/sistemas_N digitais_ADJ sistemas_N" :mm)
      (define-rule "AcerPower_N" "AcerPower_NPROP" :cr)
      (define-rule "Z-Star_N" "Z-Star_NPROP" :cr)
      (define-rule "Z-Note_N" "Z-Note_NPOP" :cr)
      (define-rule "a_PREP Hp_N" "a_PREP Hp_NPROP" :cr)
      (define-rule "on_N line_N" "online_ADJ" :dd)
      (define-rule "linha_N Hp_N" "linha_N Hp_NPROP" :cr)
      (define-rule "unicamp_N" "unicamp_NPROP" :dd)
      (define-rule "vice_N e_N versa_N" "vice_N e_KC versa_N" :dd)
      (define-rule "óculos_N 3_N D_N" "óculos_N 3_N D_N" :typo)
      (define-rule "rapaz_N ñtricolor_N declaradoñ_N" "rapaz_N tricolor_ADJ declarado_V" :cr)
      (define-rule "Ser_N ou_N não_N ser_N ..._N" "Ser_V ou_KC não_ADV ser_V ..._..." :dd)
      (define-rule "Mas_N César_N é_N um_N homem_N onrado_N ..._N" "Mas_KC César_NPROP é_V um_ART homem_N onrado_ADJ ..._..." :mm)
      (define-rule "beco_N sem_N saída_N" "beco_N sem_PREP saída_N" :mm)
      (define-rule "Botafogo_N X_N Inter_N" "Botafogo_NPROP X_N Inter_NPROP" :cr)
      (define-rule "combinação_N dsa_N tenor_N" "combinação_N dsa_PREP tenor_N" :cr :typo)
      (define-rule "Hora_N extra_N Editoria_N" "Hora_N extra_ADJ Editoria_N" :cr)
      (define-rule "café_N da_N manhã_N" "café_N de_PREP a_ART manhã_N" :mm)
      (define-rule "Chegada_N a_PREP um_ART" "Chegada_ADJ a_PREP um_ART" :dd)
      (define-rule "Cantor_N prova_N estar_V" "Cantor_N prova_V estar_V" :cr)
      (define-rule "por_N" "por_PREP" :cr)
      (define-rule "teatro_N da_N morte_N" "teatro_N de_PREP a_ART morte_N" :dd)
      (define-rule "Haroldo_N Acton_N" "Haroldo_NPROP Acton_NPROP" :cr)
      (define-rule "filmagens_N entraram_N V_N PREP_N final_ADJ" "filmagens_N entraram_V final_ADJ" :cr)
      (define-rule "Caramelo_N Rigattoni_N Cocar_N" "Caramelo_NPROP Rigattoni_NPROP Cocar_NPROP" :cr)
      (define-rule "ministro_N da_N Fazenda_N" "ministro_N de_PREP a_ART Fazenda_N" :dd)
      (define-rule "ângulos_N ñdo_N tratamento_N" "ângulos_N ñdo_PREP o_ART tratamento_N" :cr :typo)
      (define-rule "mico-leão_N da_N cara-dourada_N" "mico-leão_N de_PREP a_ART cara-dourada_N" :dd)
      (define-rule "negócio_N da_N China_N" "negócio_N de_PREP a_ART China_N" :dd)
      (define-rule "ataca_N anualmente_ADV" "ataca_V anualmente_ADV" :cr)
      (define-rule "Pesquisa_N mostra_N" "Pesquisa_N mostra_V" :cr)
      (define-rule "Fun_N by_N Phone_N" "Fun_NPROP by_NPROP Phone_NPROP" :cr)
      (define-rule "Pega_N Ladrão_N" "Pega_V Ladrão_N" :cr :dd)
      (define-rule "A_N inveja_N é_N uma_N merda_N" "A_ART inveja_N é_V uma_ART merda_N" :dd)
      (define-rule "Os_ART moedeiros_N falsos_N" "Os_ART moedeiros_N falsos_ADJ" :cr)
      (define-rule "papel_N higiênico_N" "papel_N higiênico_ADJ" :dd)
      (define-rule "Filhos_N da_N puta_N" "Filhos_N de_PREP a_ART puta_N" :dd)
      (define-rule "fala_V de_PREP arte_N e_N KCítica_N" "fala_V de_PREP arte_N e_KC KCítica_N" :cr :typo)
      (define-rule "serviço_N secreto_N israelense_N" "serviço_N secreto_ADJ israelense_ADJ" :dd)
      (define-rule "livre_N e_N justa_N" "livre_ADJ e_KC justa_ADJ" :dd)
      (define-rule "grande_ADJ triunfo_N israelo_N palestino_N" "grande_ADJ triunfo_N israelo_ADJ palestino_ADJ" :cr)
      (define-rule "Ficção_N científica_N" "Ficção_N científica_ADJ" :cr)
      (define-rule "não_N pagamento_N" "não_ADV pagamento_N" :cr)
      (define-rule "secretário_N nacional_N de_N turismo_N e_N Serviços_N" "secretário_N nacional_ADJ de_PREP turismo_N e_KC Serviços_N" :dd)
      (define-rule "dia_N 23_N passado_N" "dia_N 23_N passado_ADJ" :cr)
      (define-rule "dia_N a_N dia_N" "dia_N a_PREP dia_N" :dd)
      (define-rule "fertilização_N in_N vitro_N" "fertilização_N in_PREP vitro_N" :cr :dd)
      (define-rule "Discagem_N Direta_N à_N Distância_N" "Discagem_N Direta_ADJ a_PREP a_ART Distância_N" :cr :dd)
      (define-rule "analisado_V 2ª_N feira_N feira_N" "analisado_V 2ª_N feira_N feira_N" :typo)
      (define-rule "os_ART chamados_N shopping_N centers_N" "os_ART chamados_V shopping_N centers_N" :dd)
      (define-rule "processadores_N Alpha_N AXP_N" "processadores_N Alpha_NPROP AXP_NPROP" :cr)
      (define-rule "Centro_N Brasileiro_N de_N Filosofia_N para_N Crianças_N" "Centro_N Brasileiro_ADJ de_PREP Filosofia_N para_PREP Crianças_N" :dd)
      (define-rule "x_N" "x_SYM" :cr :dd)
      (define-rule "X_N" "X_SYM" :cr :dd)
      (define-rule "cadeirinhas_N ño_PROSUB" "cadeirinhas_N o_ART" :cr)
      (define-rule "mil_NUM ñque_PRO-KS-REL" "mil_NUM que_PRO-KS-REL" :cr)
      (define-rule "juros_N ño_PROSUB" "juros_N o_ART" :cr)
      (define-rule "vem_V ñpelo_N" "vem_V por_PREP o_ART" :cr)
      (define-rule "rapaz_N ñtricolor_N declaradoñ_N" "rapaz_N ñtricolor_ADJ declarado_V" :cr :typo)
      (define-rule "ñonde_V moram_V" "onde_ADV-KS-REL moram_V" :cr)
      (define-rule "ñou_N melhor_ADJ ,_, olheirasñ_N" "ou_KC melhor_ADJ ,_, olheiras_N" :cr)
      (define-rule "ñsua_ADJ colega_N" "sua_PROADJ colega_N" :cr)
      (define-rule "ñalternadamenteñ_N por_PREP" "alternadamente_ADV por_PREP" :cr)
      (define-rule "ñclaroñ_N a_PROADJ" "claro_N a_PROADJ" :cr)
      (define-rule "ñsem_PREP música_N" "sem_PREP música_N" :cr)
      (define-rule "ñnem_KC abundam_V" "nem_KC abundam_V" :cr)
      (define-rule "ñenquanto_N quadriplica_V" "enquanto_KS quadriplica_V" :cr)
      (define-rule "ñdistanteñ_N de_PREP" "distante_N de_PREP" :cr)
      (define-rule "ñentre_V eles_PROPESS um_ART Di_NPROP Cavalcantiñ_NPROP" "entre_V eles_PROPESS um_ART Di_NPROP Cavalcanti_NPROP" :cr)
      (define-rule "ñque_V enfrenta_V ventos_N contra_ADV em_PREP o_ART setor_N cofreñ_N" "que_V enfrenta_V ventos_N contra_ADV em_PREP o_ART setor_N cofre_N" :cr)
      (define-rule "ñmas_N pra_PREP" "mas_N pra_PREP" :cr)
      (define-rule "ñcom_N direção_N" "com_PREP direção_N" :cr)
      (define-rule "ñpasmemñ_N nunca_ADV" "pasmem_V nunca_ADV" :cr)
      (define-rule "ñespecialmente_ADV de_PREP" "especialmente_ADV de_PREP" :cr)
      (define-rule "ñda_N geração_N" "de_PREP a_ART geração_N" :cr)
      (define-rule "ñpor_N que_KS" "por_PREP que_KS" :cr)
      (define-rule "ñdo_N tratamento_N" "de_PREP o_N tratamento_N" :cr)
      (define-rule "Capote_," "Capote_NPROP" :cr)
      (define-rule "Z-Note_NPOP" "Z-Note_NPROP" :cr)
      (define-rule "NPROP,_," "" :cr)
      (define-rule "R._NUM" "R._N" :cr)
      (define-rule "cf._NUM" "cf._ADV" :cr)
      (define-rule "pós-68_NUM" "pós-68_ADV" :cr)
      (define-rule "\-_\-" "\-_\-_PUNCT" :cr)
      (define-rule "\(\(_\(\( " "\(\(_PUNCT " :cr)
      (define-rule "\)\)_\)\) " "\)\)_PUNCT" :cr)
      (define-rule "\`_\` " " " :cr)
      (define-rule "\$_\$ " "\$_SYM" :cr)
      (define-rule "\(260\,_NUM " "\(_PUNCT 260_NUM \,_PUNCT " :cr)
      (define-rule "\=_\=" "\=_SYM" :cr)

      ;; correcoes de NUM 
      (define-rule "A._NUM" "A._NPROP" :cr)
      (define-rule "a-1_NUM" "a-1_NPROP" :cr)
      (define-rule "a-2_NUM" "a-2_NPROP" :cr)
      (define-rule "a-3_NUM" "a-3_NPROP" :cr)
      (define-rule "a-4_NUM" "a-4_NPROP" :cr)
      (define-rule "A500_NUM" "A500_NPROP" :cr)
      (define-rule "A600_NUM" "A600_NPROP" :cr)
      (define-rule "Accel-340_NUM" "Accel-340_NPROP" :cr)
      (define-rule "Accel-635_NUM" "Accel-635_NPROP" :cr)
      (define-rule "B._NUM" "B._NPROP" :cr)
      (define-rule "B3_NUM" "B3_NPROP" :cr)
      (define-rule "BMB-6544_NUM" "BMB-6544_NPROP" :cr)
      (define-rule "Br-_'" "Br-_NPROP" :cr)
      (define-rule "C._NUM" "C._NPROP" :cr)
      (define-rule "CD-1_NUM" "CD-1_NPROP" :cr)
      (define-rule "CD4_NUM" "CD4_NPROP" :cr)
      (define-rule "CD-4_NUM" "CD-4_NPROP" :cr)
      (define-rule "Cf/88_NUM" "Cf/88_NPROP" :cr)
      (define-rule "Cia._NUM" "Cia._NPROP" :cr)
      (define-rule "DPX/20_NUM" "DPX/20_NPROP" :cr)
      (define-rule "DX2/66_NUM" "DX2/66_NPROP" :cr)
      (define-rule "DX2_NUM" "DX2_NPROP" :cr)
      (define-rule "DX2-66_NUM" "DX2-66_NPROP" :cr)
      (define-rule "DX33_NUM" "DX33_NPROP" :cr)
      (define-rule "DX4_NUM" "DX4_NPROP" :cr)
      (define-rule "E._NUM" "E._NPROP" :cr)
      (define-rule "e_NUM" "e_NPROP" :cr)
      (define-rule "E-1_NUM" "E-1_NPROP" :cr)
      (define-rule "E-2_NUM" "E-2_NPROP" :cr)
      (define-rule "E-4_NUM" "E-4_NPROP" :cr)
      (define-rule "Eco-_NUM" "Eco-_NPROP" :cr)
      (define-rule "ES/9.000_NUM" "ES/9.000_NPROP" :cr)
      (define-rule "ES/9.221_NUM" "ES/9.221_NPROP" :cr)
      (define-rule "F._NUM" "F._NPROP" :cr)
      (define-rule "F-16_NUM" "F-16_NPROP" :cr)
      (define-rule "F3_NUM" "F3_NPROP" :cr)
      (define-rule "F5_NUM" "F5_NPROP" :cr)
      (define-rule "GB-0005_NUM" "GB-0005_NPROP" :cr)
      (define-rule "gp120_NUM" "gp120_NPROP" :cr)
      (define-rule "gp60_NUM" "gp60_NPROP" :cr)
      (define-rule "H._NUM" "H._NPROP" :cr)
      (define-rule "HIV-2_NUM" "HIV-2_NPROP" :cr)
      (define-rule "J._NUM" "J._NPROP" :cr)
      (define-rule "Joe_," "Joe_NPROP" :cr)
      (define-rule "L._NUM" "L._NPROP" :cr)
      (define-rule "LC40_NUM" "LC40_NPROP" :cr)
      (define-rule "LV-1299_NUM" "LV-1299_NPROP" :cr)
      (define-rule "M87_NUM" "M87_NPROP" :cr)
      (define-rule "MPC-1_NUM" "MPC-1_NPROP" :cr)
      (define-rule "MPU-401_NUM" "MPU-401_NPROP" :cr)
      (define-rule "N10_NUM" "N10_NPROP" :cr)
      (define-rule "NMB94_NUM" "NMB94_NPROP" :cr)
      (define-rule "Orçamento/95_NUM" "Orçamento/95_NPROP" :cr)
      (define-rule "PS/1_NUM" "PS/1_NPROP" :cr)
      (define-rule "PSDB-_NUM" "PSDB-_NPROP" :cr)
      (define-rule "PT550_NUM" "PT550_NPROP" :cr)
      (define-rule "S._NUM" "S._NPROP" :cr)
      (define-rule "S.C._NUM" "S.C._NPROP" :cr)
      (define-rule "T._NUM" "T._NPROP" :cr)
      (define-rule "temporada/95_NUM" "temporada/95_NPROP" :cr)
      (define-rule "TH1_NUM" "TH1_NPROP" :cr)
      (define-rule "TH2_NUM" "TH2_NPROP" :cr)
      (define-rule "UB-2340_NUM" "UB-2340_NPROP" :cr)
      (define-rule "X._NUM" "X._NPROP" :cr)
      (define-rule "X-_NUM" "X-_NPROP" :cr)
      (define-rule "x12_NUM" "x12_NPROP" :cr)
      (define-rule "x15_NUM" "x15_NPROP" :cr)
      (define-rule "ZF-6218_NUM" "ZF-6218_NPROP" :cr)
      (define-rule "al._NUM" "al._N" :cr)
      (define-rule "ap._NUM" "ap._N" :cr)
      (define-rule "art._NUM" "art._N" :cr)
      (define-rule "av._NUM" "av._N" :cr)
      (define-rule "Av._NUM" "Av._N" :cr)
      (define-rule "C02_NUM" "C02_N" :cr)
      (define-rule "cap._NUM" "cap._N" :cr)
      (define-rule "cm3_NUM" "cm3_N" :cr)
      (define-rule "Cx._NUM" "Cx._N" :cr)
      (define-rule "dir._NUM" "dir._N" :cr)
      (define-rule "dr._NUM" "dr._N" :cr)
      (define-rule "ed._NUM" "ed._N" :cr)
      (define-rule "ex._NUM" "ex._N" :cr)
      (define-rule "fax._NUM" "fax._N" :cr)
      (define-rule "ingl._NUM" "ingl._N" :cr)
      (define-rule "kg/m3_NUM" "kg/m3_N" :cr)
      (define-rule "km2_NUM" "km2_N" :cr)
      (define-rule "m2_NUM" "m2_N" :cr)
      (define-rule "min._NUM" "min._N" :cr)
      (define-rule "mm._NUM" "mm._N" :cr)
      (define-rule "mr._NUM" "mr._N" :cr)
      (define-rule "mrs._NUM" "mrs._N" :cr)
      (define-rule "nº_NUM" "nº_N" :cr)
      (define-rule "org._NUM" "org._N" :cr)
      (define-rule "p._NUM" "p._N" :cr)
      (define-rule "P.S._NUM" "P.S._N" :cr)
      (define-rule "pág._NUM" "pág._N" :cr)
      (define-rule "pp._NUM" "pp._N" :cr)
      (define-rule "prof._NUM" "prof._N" :cr)
      (define-rule "PS/2_NUM" "PS/2_N" :cr)
      (define-rule "raio-X._NUM" "raio-X._N" :cr)
      (define-rule "s/nº_NUM" "s/nº_N" :cr)
      (define-rule "séc._NUM" "séc._N" :cr)
      (define-rule "sl._NUM" "sl._N" :cr)
      (define-rule "sr._NUM" "sr._N" :cr)
      (define-rule "Sr._NUM" "Sr._N" :cr)
      (define-rule "Sra._NUM" "Sra._N" :cr)
      (define-rule "te._NUM" "te._N" :cr)
      (define-rule "tel._NUM" "tel._N" :cr)
      (define-rule "tels._NUM" "tels._N" :cr)
      (define-rule "trad._NUM" "trad._N" :cr)
      (define-rule "Trad._NUM" "Trad._N" :cr)
      (define-rule "trav._NUM" "trav._N" :cr)
      (define-rule "vol._NUM" "vol._N" :cr)
      (define-rule "VOLS._NUM" "VOLS._N" :cr)
      (define-rule "anglo-_NUM" "anglo-_N" :cr)
      (define-rule "arte-_NUM" "arte-_N" :cr)
      (define-rule "bico-_NUM" "bico-_N" :cr)
      (define-rule "célula-_NUM" "célula-_N" :cr)
      (define-rule "centro-_NUM" "centro-_N" :cr)
      (define-rule "chuva-_NUM" "chuva-_N" :cr)
      (define-rule "Comunicólogo-_NUM" "Comunicólogo-_N" :cr)
      (define-rule "concordata-_NUM" "concordata-_N" :cr)
      (define-rule "deixa-_NUM" "deixa-_N" :cr)
      (define-rule "deputado-_NUM" "deputado-_N" :cr)
      (define-rule "diretor-_NUM" "diretor-_N" :cr)
      (define-rule "equivalência-_NUM" "equivalência-_N" :cr)
      (define-rule "fazendeiros-_NUM" "fazendeiros-_N" :cr)
      (define-rule "garoto-_NUM" "garoto-_N" :cr)
      (define-rule "gerente-_NUM" "gerente-_N" :cr)
      (define-rule "homem-_NUM" "homem-_N" :cr)
      (define-rule "homem-_NUM" "homem-_N" :cr)
      (define-rule "Lírico-_NUM" "Lírico-_N" :cr)
      (define-rule "micro-_NUM" "micro-_N" :cr)
      (define-rule "moeda-_NUM" "moeda-_N" :cr)
      (define-rule "padrão-_NUM" "padrão-_N" :cr)
      (define-rule "pardo-_NUM" "pardo-_N" :cr)
      (define-rule "partido-_NUM" "partido-_N" :cr)
      (define-rule "poeta-_NUM" "poeta-_N" :cr)
      (define-rule "policiais-_NUM" "policiais-_N" :cr)
      (define-rule "praças-_NUM" "praças-_N" :cr)
      (define-rule "pré-_NUM" "pré-_N" :cr)
      (define-rule "reposição-_NUM" "reposição-_N" :cr)
      (define-rule "safra-_NUM" "safra-_N" :cr)
      (define-rule "sócia-_NUM" "sócia-_N" :cr)
      (define-rule "sócio-_NUM" "sócio-_N" :cr)
      (define-rule "tanque-_NUM" "tanque-_N" :cr)

      ;; linguas estrangeiras
      (define-rule "maître_N à_N penser_N" "maître_X à_X penser_X" :cr)
      (define-rule "Encadernadoras_N first_N class_N" "Encadernadoras_N first_X class_X" :cr)
      (define-rule "white_N anglo-saxon_N protestant_N" "white_X anglo-saxon_X protestant_X" :cr)
      (define-rule "made_N in_N Brazil_N" "made_N in_N Brazil_X" :cr)
      (define-rule "marca_N high_N class_N" "marca_N high_X class_X" :cr :dd)
      (define-rule "mensagem_N SUBSCRIBE_N Mini-JIR_N" "mensagem_N SUBSCRIBE_X Mini-JIR_X" :cr :dd)
      (define-rule "blue_N jets_N jets_N" "blue_X jets_X" :cr)
      (define-rule "ne_N plus_N ultra_N" "ne_X plus_X ultra_X" :cr)
      (define-rule "white_N man'_N s_N nigger_N" "white_X man's_X nigger_X" :cr)
      (define-rule "death_N by_N water_N" "death_X by_X water_X" :cr)
      (define-rule "The_NPROP tarantula_NPROP rattling_NPROP" "The_X tarantula_X rattling_X" :cr)
      (define-rule "I_N walk_N on_N fire_N" "I_X walk_X on_X fire_X" :cr)
      (define-rule "minimal_N pairs_N pairs_N" "minimal_X pairs_X" :cr)
      (define-rule "law_N and_N economics_N" "law_X and_X economics_X" :cr)
      (define-rule "pay_N for_N performance_N" "pay_X for_X performance_X" :cr)
      (define-rule "Prime_N rate_N" "Prime_X rate_X" :cr)
      (define-rule "running_N back_N back_N" "running_X back_X" :cr)
      (define-rule "Siempre_N com_N la_N surda_N" "Siempre_X com_X la_X surda_X" :cr)
      (define-rule "Maradonariz_N go_N home_N" "Maradonariz_X go_X home_X" :cr)
      (define-rule "Maradona_N Fails_N Drug_N Test_N" "Maradona_X Fails_X Drug_X Test_X" :cr)
      (define-rule "Freud_NPROP traduziu_V l'_N âme_N humaine_N por_PREP menschlicher_N Geist_N" "Freud_NPROP traduziu_V l'_X âme_X humaine_X por_PREP menschlicher_X Geist_X" :cr)
      (define-rule "psychologie_N nouvelle_N por_PREP neue_N Seele_N ,_, conditions_N mentales_N por_PREP Seelenzustand_N" "psychologie_X nouvelle_X por_PREP neue_X Seele_X ,_, conditions_X mentales_X por_PREP Seelenzustand_X" :cr)
      (define-rule "l'_N organe_N psychique_N por_PREP Seelenorgan_N" "l'_X organe_X psychique_X por_PREP Seelenorgan_X" :cr)
      (define-rule "encontramos_V Beziehung_N von_N Leiblichem_N un_N Seelischem_N para_PREP psycho-physical_N relation_N relation_N" "encontramos_V Beziehung_X von_X Leiblichem_X un_X Seelischem_X para_PREP psycho-physical_X relation_X" :cr)
      (define-rule "Compostos_N e_KC doublets_N Appareil_N d'_N âme_N ,_, como_PREP versão_N de_PREP Seelenapparat_N" "Compostos_N e_KC doublets_X Appareil_X d'_X âme_X ,_, como_PREP versão_N de_PREP Seelenapparat_X" :cr)
      (define-rule "manifester_N Trauminhalt_N é_VAUX vertido_V como_PREP contenu_N du_N rêve_N manifeste_N" "manifester_X Trauminhalt_X é_VAUX vertido_V como_PREP contenu_X du_X rêve_X manifeste_X" :cr)
      (define-rule "katà_N phréna_ADJ kaì_N katà_N thymón_N" "katà_X phréna_X kaì_X katà_X thymón_X" :cr)
      (define-rule "And_N The_N Oscar_N GOES_N" "And_X The_X Oscar_X GOES_X" :cr)
      (define-rule "work_N in_N progress_N" "work_X in_X progress_X" :cr)
      (define-rule "up_N to_N date_N" "up_X to_X date_X" :cr)
      (define-rule "made_N in_N" "made_X in_X" :cr)
      (define-rule "NOT_N FAIR_N" "NOT_X FAIR_X" :cr)
      (define-rule "top_N beauty_N artist_N" "top_X beauty_X artist_X" :cr)
      (define-rule "drags_N e_N dykes_N on_N bikes_N" "drags_N e_KC dykes_N on_X bikes_X" :cr)
      (define-rule "up_N up_N away_N" "up_X up_X away_X" :cr)
      (define-rule "Ooh_N aah_N Wonderbra_N" "Ooh_X aah_X Wonderbra_X" :cr)
      (define-rule "Cup_N fever_N" "Cup_X fever_X" :cr)
      (define-rule "carpal_N tunnel_N syndrome_N" "carpal_X tunnel_X syndrome_X" :cr)
      (define-rule "me_N a_N non_N troppo_N" "me_X a_X non_X troppo_X" :cr)
      (define-rule "personal_N digital_N assistant_N" "personal_X digital_X assistant_X" :cr)
      (define-rule "*_ART PREP\\|\\+_ART" "*_PREP" :cr)
      (define-rule "quorum\\|_N" "quorum_N" :cr)

      (define-rule "até_PART" "até_PREP" :mm)
      (define-rule "Até_PART" "Até_PREP" :mm)


      ;; OUTRAS REGRAS
      (define-regex-rule "(\\w+)_ART (\\w+)_ADJ (\\w+)_([^N])" "\\1_ART \\2_N \\3_\\4")

      ;; para evitar que 1000_NUM seja matched com a regra abaixo,
      ;; temos que dizer que _N e' seguido de um ou mais espacos.
      (define-regex-rule "([\\d\\,\\.\\º\\-\\/]+)_N(\\s+)" "\\1_NUM\\2")
      
      ;; a regra acima nao funciona se _N for a ultima coisa na linha.
      ;; Esta regra abaixo serve pra isso:
      (define-regex-rule "([\\d\\,\\.\\º\\-\\/]+)_N$" "\\1_NUM")

      (define-regex-rule
"(ADJ|PREP|ADV|VAUX|KC|ART|PROADJ|IN|N|NUM|PROPESS|PROSUB|NPROP|PU|KS|PRO-KS|PRO-KS-REL|ADV-KS|ADV-KS-REL|CUR|V|PCP|PDEN)_(SCONJ|DET|ADJ|PREP|ADV|VAUX|KC|ART|PROADJ|IN|N|NUM|PROPESS|PROSUB|NPROP|PU|KS|PRO-KS|PRO-KS-REL|ADV-KS|ADV-KS-REL|CUR|V|PCP|PDEN)
" "" :cr)
      (define-rule "%_NUM" "%_SYM" :mm)
      (define-rule "%_N" "%_SYM" :mm)
      (define-rule ":_:" ":_PUNCT" :mm)
      (define-rule "!_!" "!_PUNCT" :mm)
      (define-rule "?_?" "?_PUNCT" :mm)
      (define-rule ";_;" ";_PUNCT" :mm)
      (define-rule ",_," ",_PUNCT" :mm)
      (define-rule "._." "._PUNCT" :mm)
      (define-rule "..._..." "..._PUNCT" :mm)
      (define-rule "(_(" "\(_PUNCT" :mm)
      (define-rule ")_)" "\)_PUNCT" :mm)
      (define-rule "[_[" "\[_PUNCT" :mm)
      (define-rule "]_]" "\]_PUNCT" :mm)
      (define-rule "{_{" "\{_PUNCT" :mm)
      (define-rule "}_}" "\}_PUNCT" :mm)
      (define-rule "\\\\_\\\\" "\\\\_PUNCT" :mm)
      (define-rule "/_/" "\/_PUNCT" :mm)
      (define-rule "<_<" "\<_PUNCT" :mm)
      (define-rule ">_>" "\>_PUNCT" :mm)
      (define-rule "\"\_\"" "\"_PUNCT" :mm)
      (define-rule "\'\_\'" "\'_PUNCT" :mm)
      (define-rule "*_PDEN" "*_ADV" :dd)
      (define-rule "*_PREP" "*_ADP" :mm)
      (define-rule "*_VAUX" "*_AUX" :mm)
      (define-rule "*_KC" "*_CONJ" :mm)
      (define-rule "*_ART" "*_DET" :mm)
      (define-rule "*_PROADJ" "*_DET" :dd)
      (define-rule "*_IN" "*_INTJ" :mm)
      (define-rule "*_NPROP" "*_PROPN" :mm)
      (define-rule "*_PROPESS" "*_PRON" :mm)
      (define-rule "*_PROSUB" "*_PRON" :dd)
      (define-rule "*_PRO-KS-REL" "*_SCONJ" :mm)
      (define-rule "*_PRO-KS" "*_SCONJ" :mm)
      (define-rule "*_ADV-KS-REL" "*_SCONJ" :mm)
      (define-rule "*_ADV-KS" "*_SCONJ" :mm)
      (define-rule "*_KS" "*_SCONJ" :mm)
      (define-rule "*_CUR" "*_SYM" :mm)
      (define-rule "*_V" "*_VERB" :mm)
      (define-rule "*_N" "*_NOUN" :mm)
      (define-rule "*_NOUNUM" "*_NUM" :mm)
      (define-rule "*_DET PREP\\|\\+_DET" "*_ADP" :cr))
    (reverse grammar)))

(defun process-macmorpho ()
  (let ((rules (define-rules)))
    (process-file rules "macmorpho-v1-train.txt" "macmorpho-v1-train-UD.txt")
    (process-file rules "macmorpho-v1-dev.txt" "macmorpho-v1-dev-UD.txt")
    (process-file rules "macmorpho-v1-test.txt" "macmorpho-v1-test-UD.txt")))
